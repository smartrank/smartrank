<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>nl.minvenj.nfi</groupId>
    <artifactId>smartrank</artifactId>
    <version>1.0.4</version>
    <packaging>jar</packaging>
    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>

        <maven.build.timestamp.format>yyyy-MM-dd</maven.build.timestamp.format>
        <buildTimestamp>${maven.build.timestamp}</buildTimestamp>
        
        <version.commons-math3>3.3</version.commons-math3>
        <version.commons-io>2.4</version.commons-io>
        <version.itext>2.1.5</version.itext>
        <version.jasperreports>6.2.2</version.jasperreports>
        <version.jbehave>4.0.5</version.jbehave>
        <version.jbehave-junit-runner>1.2.0.2</version.jbehave-junit-runner>
        <version.jtds>1.3.1</version.jtds>
        <version.jdt>3.1.1</version.jdt>
        <version.fifesoft-rsyntaxtextarea>2.6.1</version.fifesoft-rsyntaxtextarea>
        <version.fifesoft-languagesupport>2.6.0</version.fifesoft-languagesupport>

        <version.logback>1.1.3</version.logback>
        <version.miglayout>4.2</version.miglayout>
        <version.powermock>1.6.2</version.powermock>
        <version.hamcrest>1.3</version.hamcrest>

        <version.plugin.assembly>2.5.4</version.plugin.assembly>
        <version.plugin.build-helper>1.9.1</version.plugin.build-helper>
        <version.plugin.jar>2.6</version.plugin.jar>
        <version.plugin.jaxb2>2.1</version.plugin.jaxb2>
        <version.plugin.resources>2.7</version.plugin.resources>
    </properties>
    <name>SmartRank</name>
    <description>SmartRank allows DNA database searches for individuals whose profiles lead to high LRs in favor of the prosecution hypothesis through a fast and user-friendly GUI.</description>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>${version.plugin.jar}</version>
                <configuration>
                    <archive>
                        <manifest>
                            <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
                            <addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
                            <addClasspath>true</addClasspath>
                            <classpathPrefix>lib</classpathPrefix>
                            <mainClass>nl.minvenj.nfi.smartrank.SmartRank</mainClass>
                        </manifest>
                    </archive>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-assembly-plugin</artifactId>
                <version>${version.plugin.assembly}</version>
                <configuration>
                    <descriptors>
                        <descriptor>src/main/assembly/assembly.xml</descriptor>
                    </descriptors>
                    <appendAssemblyId>false</appendAssemblyId>
                </configuration>
                <executions>
                    <execution>
                        <id>make-assembly</id>
                        <phase>verify</phase>
                        <goals>
                            <goal>single</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <version>${version.plugin.resources}</version>
                <executions>
                    <execution>
                        <id>copy-report</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${basedir}/target/report</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>${basedir}/report</directory>
                                    <filtering>true</filtering>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                    <execution>
                        <id>copy-release-notes</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${basedir}/target</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>${basedir}</directory>
                                    <includes>
                                        <include>RELEASENOTES.txt</include>
                                    </includes>
                                    <filtering>true</filtering>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                    <execution>
                        <id>copy-manual</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${basedir}/target/manual</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>${basedir}/manual</directory>
                                    <filtering>true</filtering>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                    <execution>
                        <id>copy-xsd</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${basedir}/target/xsd</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>${basedir}/src/main/resources/xsd/SmartRankImportFile</directory>
                                    <filtering>false</filtering>
                                    <includes>
                                        <include>smartrank.xsd</include>
                                    </includes>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                    <execution>
                        <id>copy-doc</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${basedir}/target/doc</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>${basedir}/doc</directory>
                                    <filtering>false</filtering>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>jaxb2-maven-plugin</artifactId>
                <version>${version.plugin.jaxb2}</version>
                <executions>
                    <execution>
                        <id>jaxb-generate-CODISImportFile</id>
                        <goals>
                            <goal>xjc</goal>
                        </goals>
                        <configuration>
                            <sources>
                                <source>${project.basedir}/src/main/resources/xsd/CODISImportFile/codis.xsd</source>
                            </sources>
                            <packageName>nl.minvenj.nfi.smartrank.io.codis.jaxb</packageName>
                            <clearOutputDir>false</clearOutputDir>
                            <extension>true</extension>
                            <skipXjc>${nfi.skip.generate-installer-files}</skipXjc>
                        </configuration>
                    </execution>
                    <execution>
                        <id>jaxb-generate-STRBaseFrequenciesFile</id>
                        <goals>
                            <goal>xjc</goal>
                        </goals>
                        <configuration>
                            <sources>
                                <source>${project.basedir}/src/main/resources/xsd/STRBaseFrequenciesFile/strbase.xsd</source>
                            </sources>
                            <packageName>nl.minvenj.nfi.smartrank.io.strbase.jaxb</packageName>
                            <clearOutputDir>false</clearOutputDir>
                            <extension>true</extension>
                            <skipXjc>${nfi.skip.generate-installer-files}</skipXjc>
                        </configuration>
                    </execution>
                    <execution>
                        <id>jaxb-generate-SmartRankImportFile</id>
                        <goals>
                            <goal>xjc</goal>
                        </goals>
                        <configuration>
                            <sources>
                                <source>${project.basedir}/src/main/resources/xsd/SmartRankImportFile/smartrank.xsd</source>
                            </sources>
                            <packageName>nl.minvenj.nfi.smartrank.io.smartrankimport.jaxb</packageName>
                            <clearOutputDir>false</clearOutputDir>
                            <extension>true</extension>
                            <skipXjc>${nfi.skip.generate-installer-files}</skipXjc>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>0.7.7.201606060606</version>
				<executions>
					<execution>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
					</execution>
					<execution>
						<id>report</id>
						<phase>test</phase>
						<goals>
							<goal>report</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
                <version>${version.plugin.build-helper}</version>
                <executions>
                    <execution>
                        <id>add-generated-sources</id>
                        <goals>
                            <goal>add-source</goal>
                        </goals>
                        <configuration>
                            <sources>
                                <source>${project.basedir}/target/generated-sources/jaxb</source>
                            </sources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
    <dependencies>
        <dependency>
            <groupId>com.fifesoft</groupId>
            <artifactId>rsyntaxtextarea</artifactId>
            <version>${version.fifesoft-rsyntaxtextarea}</version>
        </dependency>
        <dependency>
            <groupId>com.fifesoft</groupId>
            <artifactId>languagesupport</artifactId>
            <version>${version.fifesoft-languagesupport}</version>
        </dependency>
        <dependency>
            <groupId>com.miglayout</groupId>
            <artifactId>miglayout-core</artifactId>
            <version>${version.miglayout}</version>
        </dependency>
        <dependency>
            <groupId>com.miglayout</groupId>
            <artifactId>miglayout-swing</artifactId>
            <version>${version.miglayout}</version>
        </dependency>
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <version>${version.logback}</version>
            <type>jar</type>
        </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-math3</artifactId>
            <version>${version.commons-math3}</version>
            <type>jar</type>
        </dependency>
        <dependency>
            <groupId>net.sf.jasperreports</groupId>
            <artifactId>jasperreports</artifactId>
            <version>${version.jasperreports}</version>
            <type>jar</type>
            <exclusions>
                <exclusion>
                    <groupId>com.lowagie</groupId>
                    <artifactId>itext</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>eclipse</groupId>
                    <artifactId>jdtcore</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.olap4j</groupId>
                    <artifactId>olap4j</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.eclipse.jdt</groupId>
            <artifactId>core</artifactId>
            <version>${version.jdt}</version>
        </dependency>
        <dependency>
            <groupId>com.lowagie</groupId>
            <artifactId>itext</artifactId>
            <version>${version.itext}</version>
        </dependency>
        <dependency>
            <groupId>org.powermock</groupId>
            <artifactId>powermock-module-junit4</artifactId>
            <version>${version.powermock}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.powermock</groupId>
            <artifactId>powermock-api-mockito</artifactId>
            <version>${version.powermock}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.opencsv</groupId>
            <artifactId>opencsv</artifactId>
            <version>3.1</version>
        </dependency>
        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
            <version>${version.commons-io}</version>
        </dependency>
        <dependency>
            <groupId>org.hamcrest</groupId>
            <artifactId>hamcrest-all</artifactId>
            <version>${version.hamcrest}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
          <groupId>net.sourceforge.jtds</groupId>
          <artifactId>jtds</artifactId>
          <version>${version.jtds}</version>
          <scope>runtime</scope>
        </dependency>
    </dependencies>
</project>
