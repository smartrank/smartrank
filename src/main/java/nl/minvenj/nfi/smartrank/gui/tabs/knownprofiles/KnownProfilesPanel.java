/*
 * Copyright (C) 2015 Netherlands Forensic Institute
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 */
package nl.minvenj.nfi.smartrank.gui.tabs.knownprofiles;

import static nl.minvenj.nfi.smartrank.raven.ApplicationStatus.READING_SAMPLES;
import static nl.minvenj.nfi.smartrank.raven.ApplicationStatus.VERIFYING_DB;
import static nl.minvenj.nfi.smartrank.raven.ApplicationStatus.WAIT_CRIMESCENE_PROFILES;
import static nl.minvenj.nfi.smartrank.raven.ApplicationStatus.WAIT_DB;

import java.util.EnumSet;

import nl.minvenj.nfi.smartrank.gui.tabs.SmartRankPanel;
import nl.minvenj.nfi.smartrank.messages.data.AddKnownFilesMessage;
import nl.minvenj.nfi.smartrank.messages.status.ApplicationStatusMessage;
import nl.minvenj.nfi.smartrank.raven.ApplicationStatus;
import nl.minvenj.nfi.smartrank.raven.annotations.RavenMessageHandler;

public class KnownProfilesPanel extends SmartRankPanel {

    private static final EnumSet<ApplicationStatus> DISABLED_STATUS_SET = EnumSet.of(WAIT_DB, VERIFYING_DB, WAIT_CRIMESCENE_PROFILES, READING_SAMPLES);

    /**
     * Creates new form KnownProfilesPanel
     */
    public KnownProfilesPanel() {
        initComponents();
        registerAsListener();
        acceptDroppedFiles(AddKnownFilesMessage.class);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        _mainSplitPane = new javax.swing.JSplitPane();
        _knownProfilesTopPanel = new nl.minvenj.nfi.smartrank.gui.tabs.knownprofiles.KnownProfilesTopPanel();
        _knownProfilesBottomPanel = new nl.minvenj.nfi.smartrank.gui.tabs.knownprofiles.KnownProfilesBottomPanel();

        _mainSplitPane.setOrientation(javax.swing.JSplitPane.VERTICAL_SPLIT);
        _mainSplitPane.setTopComponent(_knownProfilesTopPanel);
        _mainSplitPane.setRightComponent(_knownProfilesBottomPanel);

        final javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(_mainSplitPane, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(_mainSplitPane, javax.swing.GroupLayout.DEFAULT_SIZE, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private nl.minvenj.nfi.smartrank.gui.tabs.knownprofiles.KnownProfilesBottomPanel _knownProfilesBottomPanel;
    private nl.minvenj.nfi.smartrank.gui.tabs.knownprofiles.KnownProfilesTopPanel _knownProfilesTopPanel;
    private javax.swing.JSplitPane _mainSplitPane;
    // End of variables declaration//GEN-END:variables

    @RavenMessageHandler(ApplicationStatusMessage.class)
    public void handleApplicationStatus(final ApplicationStatus newValue) {
        setEnabled(!DISABLED_STATUS_SET.contains(newValue));
    }
}
